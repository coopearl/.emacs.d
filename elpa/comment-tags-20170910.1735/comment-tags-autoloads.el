;;; comment-tags-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from comment-tags.el

(autoload 'comment-tags-list-tags-buffer "comment-tags" "\
List all tags in the current buffer." t)
(autoload 'comment-tags-find-tags-buffer "comment-tags" "\
Complete tags in the current buffer and jump to line." t)
(autoload 'comment-tags-list-tags-buffers "comment-tags" "\
List tags for all open buffers." t)
(autoload 'comment-tags-next-tag "comment-tags" "\
Jump to next comment-tag from point." t)
(autoload 'comment-tags-previous-tag "comment-tags" "\
Jump to previous comment-tag from point." t)
(autoload 'comment-tags-mode "comment-tags" "\
Highlight and navigate comment tags.

This is a minor mode.  If called interactively, toggle the
`Comment-Tags mode' mode.  If the prefix argument is positive,
enable the mode, and if it is zero or negative, disable the mode.

If called from Lisp, toggle the mode if ARG is `toggle'.  Enable
the mode if ARG is nil, omitted, or is a positive number.
Disable the mode if ARG is a negative number.

To check whether the minor mode is enabled in the current buffer,
evaluate `comment-tags-mode'.

The mode's hook is called both when the mode is enabled and when
it is disabled.

(fn &optional ARG)" t)
(register-definition-prefixes "comment-tags" '("comment-tags-"))

;;; End of scraped data

(provide 'comment-tags-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; comment-tags-autoloads.el ends here
