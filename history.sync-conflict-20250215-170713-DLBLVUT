;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(exwm-workspace--switch-history input-method-history read-expression-history search-ring org-link--history goto-line-history tmm--history shell-command-history command-history calc-extended-command-history eww-prompt-history xref--read-identifier-history read-char-history read-number-history org-tags-history read-from-kill-ring-history yes-or-no-p-history buffer-name-history minibuffer-history extended-command-history file-name-history))
(setq exwm-workspace--switch-history '(#("[0] 1  2  3 " 1 2 (face #1=(:foreground "green")) 4 5 (face #1#) 7 8 (face nil) 10 11 (face nil)) #(" 0 [1] 2  3 " 1 2 (face #1=(:foreground "green")) 4 5 (face #1#) 7 8 (face nil) 10 11 (face nil)) #(" 0  1 [2] 3 " 1 2 (face #1=(:foreground "green")) 4 5 (face #1#) 7 8 (face nil) 10 11 (face nil)) #(" 0  1  2 [3]" 1 2 (face #1=(:foreground "green")) 4 5 (face #1#) 7 8 (face nil) 10 11 (face nil))))
(setq read-expression-history '("(setq org-confirm-babel-evaluate nil)"))
(setq search-ring '(#("EXw" 0 3 (isearch-case-fold-search nil isearch-regexp-function nil)) #("exwm" 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) #("beg" 0 3 (isearch-case-fold-search t isearch-regexp-function nil)) #("backend" 0 7 (isearch-case-fold-search t isearch-regexp-function nil)) #("bac" 0 3 (isearch-case-fold-search t isearch-regexp-function nil)) #("send" 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) #("efs" 0 3 (isearch-case-fold-search t isearch-regexp-function nil)) #("works" 0 5 (isearch-case-fold-search t isearch-regexp-function nil)) #("workspac" 0 8 (isearch-case-fold-search t isearch-regexp-function nil)) #("obje" 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) #("mater" 0 5 (isearch-case-fold-search t isearch-regexp-function nil)) #("ob" 0 2 (isearch-case-fold-search t isearch-regexp-function nil)) #("obj" 0 3 (isearch-case-fold-search t isearch-regexp-function nil)) #("Les" 0 3 (isearch-case-fold-search nil isearch-regexp-function nil)) #("begi" 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) #("adv" 0 3 (isearch-case-fold-search t isearch-regexp-function nil))))
(setq tmm--history '("h==>Help" "i==>Image" "d==>DocView" "t==>Tools" "b==>Buffers" "o==>Options" "e==>Edit" "f==>File"))
(setq shell-command-history '("librewolf " "vter" "discord " "librewolf " "discord " "signal-desktop " "librewolf " "bash ~/scripts/keyboardfix.sh " "signal-desktop " "discord " "bash ~/scripts/keyboardfix.sh " "vterm" "librewolf " "st" "librewolf " "discord " "librewolf " "passmenu " "firefox " "date" "signal-desktop " "st" "librewolf " "discord" "librewolf "))
(setq command-history '(((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "librewolf ") (vterm nil) (execute-extended-command nil "vterm" "vter") (kill-buffer "Under the Violent Sky.org") (find-file "~/Documents/org/Under the Violent Sky.org" t) ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "librewolf ") (vterm nil) (execute-extended-command nil "vterm" "vt") ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "vter") (kill-buffer "Under the Violent Sky.org") (find-file "~/Documents/org/Under the Violent Sky.org" t) (switch-to-buffer "Librewolf: Inbox - joshcoopermanearl@gmail.com - Gmail — LibreWolf" nil 'force-same-window) ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "discord ") ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "librewolf ") (kill-buffer "Signal") (kill-buffer "discord") ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "discord ") ((lambda (command) (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command)) "signal-desktop ") (switch-to-buffer "Librewolf: The Euler-Maclaurin formula, Bernoulli numbers, the zeta function, and real-variable analytic continuation | What's new — LibreWolf" nil 'force-same-window) (switch-to-buffer "Librewolf: The Euler-Maclaurin formula, Bernoulli numbers, the zeta function, and real-variable analytic continuation | What's new — LibreWolf" nil 'force-same-window) (switch-to-buffer "urls" nil 'force-same-window) (switch-to-buffer "Librewolf: LibreWolf" nil 'force-same-window) (switch-to-buffer "urls" nil 'force-same-window) (switch-to-buffer "Librewolf: But what is the Riemann zeta function? Visualizing analytic continuation - YouTube — LibreWolf" nil 'force-same-window) (switch-to-buffer "Under the Violent Sky.org" nil 'force-same-window)))
(setq eww-prompt-history '("libgen.is" "reddit.com/r/nba" "flat white" "mewflaw" "reddit.com/r/books" "classroom.google.com" "youtube.com"))
(setq read-char-history '("/"))
(setq read-number-history '("2" "j" "1" "^"))
(setq org-tags-history '("export" "slides" "notes" "slides"))
(setq yes-or-no-p-history '("yes" "no" "no]" "no" "yes" " yes" "yes" "no" "yes" "no" "yes" "no" "yes" "no" "yes" "no" "yes" "es" "y" "yes"))
(setq buffer-name-history '("Under the Violent Sky.org" "Librewolf: Inbox - joshcoopermanearl@gmail.com - Gmail — LibreWolf" "Signal" "discord" "Librewolf: The Euler-Maclaurin formula, Bernoulli numbers, the zeta function, and real-variable analytic continuation | What's new — LibreWolf" "urls" "Librewolf: LibreWolf" "urls" "Librewolf: But what is the Riemann zeta function? Visualizing analytic continuation - YouTube — LibreWolf" "Under the Violent Sky.org" "Signal" "discord" "Librewolf: The Mafia State - The Chris Hedges Report — LibreWolf" "Signal" "*vterm*" "discord" "Librewolf: LibreWolf" "discord" "urls" "Librewolf: LibrePlanet 2022: Living in freedom with GNU Emacs - YouTube — LibreWolf" "urls" "Librewolf: LibreWolf" "Librewolf: protesilaos stavrou at DuckDuckGo — LibreWolf" "Librewolf: LibrePlanet 2022: Living in freedom with GNU Emacs - YouTube — LibreWolf" "discord"))
(setq minibuffer-history '("magit" "olivetti-20241030.542" "olivetti" "vterm" "bongo-20201002.1020" "bongo" "bongo-20201002.1020" "bongo" "exwm" "exwm-0.33" "yes" "0.4" "0.5" "yes" "0.5" "yes" "DeepL" "buffer" "line" "disable" "paragraph" "word" "DeepL" "buffer" "nil"))
(setq extended-command-history '("vterm" "exwm-layout-toggle-mode-line" "vterm" "package-delete" "package-install" "package-delete" "olivetti-mode" "package-install" "window-swap-states" "windmove-right" "gnus" "vterm" "load-file" "sieve-upload-and-bury" "vterm" "package-install" "package-autoremove" "package-delete" "package-install" "exwm-init" "beginning-of-line" "customize" "bongo" "package-install" "eshell"))
(setq file-name-history '("~/Documents/org/Under the Violent Sky.org" "~/Documents/org/bookmarks.org" "~/.newsboat/" "~/Documents/org/algebra1/alg1-021325.org" "~/Documents/org/Under the Violent Sky.org" "~/.emacs.d/configuration.org" "~/.emacs.d/init.el" "~/.emacs.d/configuration.org" "~/.xinitrc" "~/.emacs.d/configuration.org" "~/Music/" "~/Documents/org/algebra1/alg1-021325.org" "~/.emacs.d/configuration.org" "~/Music/" "~/.emacs.d/configuration.org" "~/.emacs.d/init.el" "~/.emacs.d/configuration.org" "~/.xinitrc" "~/.emacs.d/configuration.org" "~/.xinitrc" "~/.emacs.d/init.el" "~/.emacs.d/configuration.org" "~/.emacs.d/configuration.el" "~/.emacs.d/init.el" "~/.emacs.d/configuration.org"))
